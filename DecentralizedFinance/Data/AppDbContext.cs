// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using DecentralizedFinance.Data.Models;

#nullable disable

namespace DecentralizedFinance.Data
{
    public partial class AppDbContext : DbContext
    {
        public AppDbContext()
        {
        }

        public AppDbContext(DbContextOptions<AppDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<DeFiProject> DeFiProject { get; set; }
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<Token> Token { get; set; }
        public virtual DbSet<TokenPrice> TokenPrice { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Arabic_CI_AS");

            modelBuilder.Entity<DeFiProject>(entity =>
            {
                entity.Property(e => e.DeFiPulseIndex).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.DefiTotalCash).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MakerDominance).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.RegisterDate).HasColumnType("datetime");

                entity.Property(e => e.TotalValueLocked).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Group>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.PersianName)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.Tvl).HasColumnName("TVL");
            });

            modelBuilder.Entity<Token>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FullName).HasMaxLength(150);

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Name).HasMaxLength(150);

                entity.Property(e => e.Tvl)
                    .HasMaxLength(10)
                    .HasColumnName("TVL")
                    .IsFixedLength(true);

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Token)
                    .HasForeignKey(d => d.GroupId)
                    .HasConstraintName("FK_Token_Group");
            });

            modelBuilder.Entity<TokenPrice>(entity =>
            {
                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.HasOne(d => d.Token)
                    .WithMany(p => p.TokenPrice)
                    .HasForeignKey(d => d.TokenId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TokenPrice_Token");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}